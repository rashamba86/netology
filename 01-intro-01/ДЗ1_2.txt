Шаги создания ПО:

Разработка, цели DevOps:
 1. Обеспечение разработчиков идентичной средой разработки.
 2. Автоматизация тестов и оперативная передача результатов тестов разработчикам.

Тестирование, цели DevOps:
 1. Автоматизация тестов.

Безопасность, цели DevOps:
 1. Обеспечить с технической стороны контроль доступа сотрудников к информации.
 2. Поиск уязвимостей в сторонних библиотеках.
 3. Обеспечить конроль доступа между отдельными сервисами.

Выкладка на стейдж, цели DevOps:
 1. Тестирование новых возможностей ПО.
 2. Обеспечение идентичности окружения для тестирования ПО.
 3. Автоматизация процесса создания, функционирования и уничтожения "песочниц".

Выкладка в продакшн:
 1. Автоматизация выкладки изменений.
 2. Обеспечение возможности отката версии ПО.

Мониторинг:
 1. Получение автоматических оповещений обо всех ошибках.
 2. Обеспечить быстрый доступ к логам всем участникам процесса.

--------------------------------------
Этапы создания:

Коммуникация:
 1. Заллогировать результаты каждой коммуникации, обеспечение быстрого доступа к результатам коммуникации.

Разработка:
 1. Помощь в выборе инструментов для всех участников процесса создания ПО.
 2. Обеспечение разработчиков идентичной средой разработки.
 3. Автоматизация внутреннего тестования и оперативная передача результатов тестов разработчикам.

Внешние интеграции:
 1. Проверка линцензирования инструментов разработки ПО.
 2. Поддержка изменений.

Инфраструктура:
 1. Выбор оптимального решения для минимизации затрат и обеспечения выполнения поставленных задач.
 2. Автоматизация развертывания унификацированных решений на нескольких площадах. Поддержка работоспособности.

Тестирование:
 1. Обеспечение автоматизации тестирования (unit, функциональное, интеграционное).


Жизненный цикл разработки ПО:
Сбор информации - Планирование - Разработка - Тестирование - Внедрение - Мониторинг - (повтор цикла)...

Сбор информации: на данном этапе происходит коммуникация с заказчиком, определение требований к системе (дополнительному функционалу).
Задачи DevOps на этом этапе - "заллогировать" результаты каждой коммуникации, обеспечить быстрый доступ к результатам коммуникации.

Планирование: на этапе планирования проводится анализ требований заказчика, анализ трудозатрат на реализацию дополнительного функционала, раздача заданий исполнителям.
Задачи DevOps на этом этапе - обеспечить персонал инструментами для управления проектами, уделить внимание вопросам безопасности для минимизации затрат и усилий в дальнейшем, обеспечить с технической стороны контроль доступа сотрудников к информации, обеспечить проверку лицензирования инструментов разработки ПО

Разработка: на этом этапе выполняется проектирование ПО и создание программного кода продукта или его дополнительного функционала.
Задачи DevOps на данном этапе - помощь в выборе инструментов для всех участников процесса создания ПО, обеспечение разработчиков идентичной средой разработки, автоматизированными инструментами для компиляции исходного кода, автоматизация внутреннего тестирования и оперативная передача результатов тестов разработчикам, обеспечение участников разработки системой контроля версий.

Тестирование: на данном этапе проводится ручное и автоматизированное тестирование разработанного кода.
Задачи DevOps на данном этапе - организовать среды автоматизации тестирования (unit, функциональное, интеграционное).

Внедрение: на этом этапе используются инструменты, которые помогают управлять, координировать, планировать и автоматизировать выпуск продукции.
Задачи DevOps на данном этапе - обеспечить автоматизацию выкладки изменений в "продакшн", обеспечить возможности отката версии ПО.

Мониторинг: на этапе мониторинга выполняется сбор информации о проблемах, возникающих в конкретной версии программного обеспечения в процессе эксплуатации.
Задачи DevOps на данном этапе - организовать автоматизацию оповещений обо всех ошибках, обеспечить быстрый доступ к логам всем участникам процесса.